name: Continuous Integration

on:
    push:
        branches:  # Build 'master' branch
            - 'master'
    pull_request:  # Build any PR

env:
  SLACK_TEXT: '{"attachments":[{
                "text":"Un job demande votre attention !","color":"#D00000",
                "fields":[{"title": ":warning: Action URL","value": "${{ env.GITHUB_SERVER_URL }}/${{ env.GITHUB_REPOSITORY }}/actions/runs/${{ env.GITHUB_RUN_ID}}"
                }]}]}'

jobs:
  rustfmt:
    name: Formatting check
    runs-on: ubuntu-latest
    container: kisiodigital/rust-ci:latest
    steps:
    - uses: actions/checkout@master
    - name: Check formatting
      run: make format
    - name: slack notification (the job has failed)
      if: failure() && github.ref == 'ref/head/master'
      run: |
         curl -s -X POST -H "Content-Type: application/json" -d '${{ env.SLACK_TEXT }}' ${{ secrets.SLACK_CORE_TOOLS_TEAM_URL }}

  clippy:
    name: Analyzing code with Clippy
    runs-on: ubuntu-latest
    container: kisiodigital/rust-ci:latest-proj7.2.1
    steps:
    - uses: actions/checkout@master
    - name: Linting
      run: make lint
    - name: slack notification (the job has failed)
      if: failure() && github.ref == 'ref/head/master'
      run: |
         curl -s -X POST -H "Content-Type: application/json" -d '${{ env.SLACK_TEXT }}' ${{ secrets.SLACK_CORE_TOOLS_TEAM_URL }}

  audit:
    name: Audits
    runs-on: ubuntu-latest
    container: kisiodigital/rust-ci:latest-proj7.2.1
    continue-on-error: true
    steps:
    - uses: actions/checkout@v1
    - name: Security audit
      uses: actions-rs/audit-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: slack notification (the job has failed)
      if: failure() && github.ref == 'ref/head/master'
      run: |
         curl -s -X POST -H "Content-Type: application/json" -d '${{ env.SLACK_TEXT }}' ${{ secrets.SLACK_CORE_TOOLS_TEAM_URL }}

  tests:
    name: Tests
    runs-on: ubuntu-latest
    container: kisiodigital/rust-ci:latest-proj7.2.1
    steps:
    - uses: actions/checkout@master
    - name: Checkout Submodules
      uses: textbook/git-checkout-submodule-action@2.1.1
    - name: Install xmllint
      run: apt update && apt install --yes libxml2-utils
    - name: Run tests with and without features
      run: make test
    - name: slack notification (the job has failed)
      #if: failure() && github.ref == 'ref/head/master'
      run: |
         curl -s -X POST -H "Content-Type: application/json" -d '${{ env.SLACK_TEXT }}' ${{ secrets.SLACK_CORE_TOOLS_TEAM_URL }}

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    container: kisiodigital/rust-ci:latest-proj7.2.1
    steps:
    - uses: actions/checkout@master
    - name: Checkout Submodules
      uses: textbook/git-checkout-submodule-action@2.1.1
    - name: Install xmllint
      run: apt update && apt install --yes libxml2-utils pkg-config libssl-dev
    - name: Install `cargo-tarpaulin`
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-tarpaulin
    - name: Run tests for coverage
      uses: actions-rs/cargo@v1
      with:
        command: tarpaulin
        args: --all-features --all-targets --workspace --count --out Xml --run-types AllTargets
    - name: Codecov upload
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: slack notification (the job has failed)
      if: failure() && github.ref == 'ref/head/master'
      run: |
         curl -s -X POST -H "Content-Type: application/json" -d '${{ env.SLACK_TEXT }}' ${{ secrets.SLACK_CORE_TOOLS_TEAM_URL }}

